{"version":3,"sources":["../../../qtiItemPci/views/js/pciCreator/ims/audioRecordingInteraction/creator/tpl/propertiesForm!tpl","../../../qtiItemPci/views/js/pciCreator/ims/audioRecordingInteraction/creator/widget/states/Question.js","../../../qtiItemPci/views/js/pciCreator/ims/audioRecordingInteraction/creator/widget/states/states.js","../../../qtiItemPci/views/js/pciCreator/ims/audioRecordingInteraction/creator/css/audioRecordingInteraction!css","../../../qtiItemPci/views/js/pciCreator/ims/audioRecordingInteraction/creator/widget/Widget.js","../../../qtiItemPci/views/js/pciCreator/ims/audioRecordingInteraction/creator/tpl/markup!tpl","../../../qtiItemPci/views/js/pciCreator/ims/audioRecordingInteraction/imsPciCreator.js","../../../../../../../../onLayerEnd0.js"],"names":["define","hb","template","Handlebars","depth0","helpers","partials","data","program1","program3","program5","this","compilerInfo","merge","stack1","helper","options","buffer","helperMissing","escapeExpression","self","__","hash","call","identifier","serial","allowPlayback","inverse","noop","fn","program","autoStart","unless","delayMinutes","delaySeconds","autoPlayback","maxRecords","maxRecordingTime","maximumRecordingTimeLimit","isCompressed","audioBitrate","isStereo","displayDownloadLink","partialUpdateInterval","_","$","module","stateFactory","Question","formElement","pciMediaManagerFactory","simpleEditor","formTpl","typeCaster","configChangeCallBack","interaction","value","name","prop","triggerPci","getProperties","AudioRecordingInteractionStateQuestion","extend","$container","widget","destroy","prototype","initForm","$compressedOptions","$uncompressedOptions","$delayOptions","_widget","$form","element","response","getResponseDeclaration","pciMediaManager","html","defaults","config","attr","strToBool","updateResponsePartially","parseInt","find","initWidget","setChangeCallbacks","assign","i","id","boundInteraction","show","hide","parseFloat","getChangeCallbacks","init","factory","states","createBundle","arguments","Widget","AudioRecordingInteractionWidget","clone","initCreator","$interaction","registerStates","length","addClass","ciRegistry","markupTpl","audioRecordingInteractionCreator","getTypeIdentifier","getWidget","defaultProperties","beforeStateInit","event","pci","typeIdentifier","getDefaultProperties","forEach","properties","isReviewMode","media","autostart","replayTimeout","maxPlays","afterCreate","getMarkupTemplate","getMarkupData","defaultData","c","d","document","a","s","createElement","type","getElementsByTagName","cssText","createTextNode","IMSPCI"],"mappings":"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","file":"imsPciCreator.min.js","sourcesContent":["\ndefine('tpl!audioRecordingInteraction/creator/tpl/propertiesForm', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, functionType=\"function\", self=this;\n\nfunction program1(depth0,data) {\n  \n  \n  return \"checked=\\\"checked\\\"\";\n  }\n\nfunction program3(depth0,data) {\n  \n  \n  return \"style=\\\"display:none\\\"\";\n  }\n\nfunction program5(depth0,data) {\n  \n  \n  return \" selected=\\\"selected\\\"\";\n  }\n\n  buffer += \"<div class=\\\"panel\\\">\\n    <label for=\\\"response-identifier\\\" class=\\\"has-icon\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Response identifier\", options) : helperMissing.call(depth0, \"__\", \"Response identifier\", options)))\n    + \"</label>\\n    <span class=\\\"icon-help tooltipstered\\\" data-tooltip=\\\"~ .tooltip-content:first\\\" data-tooltip-theme=\\\"info\\\"></span>\\n    <div class=\\\"tooltip-content\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"The identifier of the choice. This identifier must not be used by any other response or item variable. An identifier is a string of characters that must start with a Letter or an underscore (\\\"_\\\") and contain only Letters, underscores, hyphens (\\\"-\\\"), period (\\\".\\\", a.k.a. full-stop), Digits, CombiningChars and Extenders.\", options) : helperMissing.call(depth0, \"__\", \"The identifier of the choice. This identifier must not be used by any other response or item variable. An identifier is a string of characters that must start with a Letter or an underscore (\\\"_\\\") and contain only Letters, underscores, hyphens (\\\"-\\\"), period (\\\".\\\", a.k.a. full-stop), Digits, CombiningChars and Extenders.\", options)))\n    + \"</div>\\n\\n    <input id=\\\"response-identifier\\\"\\n           type=\\\"text\\\"\\n           name=\\\"identifier\\\"\\n           value=\\\"\";\n  if (helper = helpers.identifier) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.identifier); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\"\\n           placeholder=\\\"e.g. RESPONSE\\\"\\n           data-validate=\\\"$notEmpty; $qtiIdentifier; $availableIdentifier(serial=\";\n  if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \");\\\">\\n</div>\\n\\n<div class=\\\"panel\\\">\\n    <label>\\n        <input name=\\\"allowPlayback\\\" type=\\\"checkbox\\\" \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.allowPlayback), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"/>\\n        <span class=\\\"icon-checkbox\\\"></span> \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Allow playback\", options) : helperMissing.call(depth0, \"__\", \"Allow playback\", options)))\n    + \"\\n    </label>\\n    <span class=\\\"icon-help tooltipstered\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n    <span class=\\\"tooltip-content\\\">\\n        \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Give the possibility to the test taker to playback its own recording.\", options) : helperMissing.call(depth0, \"__\", \"Give the possibility to the test taker to playback its own recording.\", options)))\n    + \"\\n    </span>\\n</div>\\n\\n<div class=\\\"panel\\\">\\n    <label>\\n        <input name=\\\"autoStart\\\" type=\\\"checkbox\\\" \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.autoStart), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"/>\\n        <span class=\\\"icon-checkbox\\\"></span> \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Auto start recording\", options) : helperMissing.call(depth0, \"__\", \"Auto start recording\", options)))\n    + \"\\n    </label>\\n    <span class=\\\"icon-help tooltipstered\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n    <span class=\\\"tooltip-content\\\">\\n        \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Recording starts automatically once test taker give microphone use authorisation.\", options) : helperMissing.call(depth0, \"__\", \"Recording starts automatically once test taker give microphone use authorisation.\", options)))\n    + \"\\n    </span>\\n</div>\\n\\n<div data-role=\\\"delayOptions\\\" \";\n  stack1 = helpers.unless.call(depth0, (depth0 && depth0.autoStart), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \">\\n    <div class=\\\"panel\\\">\\n        <label for=\\\"delay-minutes\\\" class=\\\"spinner\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Min:\", options) : helperMissing.call(depth0, \"__\", \"Min:\", options)))\n    + \"</label>\\n        <input id=\\\"delay-minutes\\\" name=\\\"delayMinutes\\\" value=\\\"\";\n  if (helper = helpers.delayMinutes) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.delayMinutes); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" data-increment=\\\"1\\\" data-min=\\\"0\\\" data-max=\\\"20\\\" type=\\\"text\\\" />\\n        <label for=\\\"delay-seconds\\\" class=\\\"spinner\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Sec:\", options) : helperMissing.call(depth0, \"__\", \"Sec:\", options)))\n    + \"</label>\\n        <input id=\\\"delay-seconds\\\" name=\\\"delaySeconds\\\" value=\\\"\";\n  if (helper = helpers.delaySeconds) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.delaySeconds); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" data-increment=\\\"15\\\" data-min=\\\"0\\\" data-max=\\\"45\\\" type=\\\"text\\\" />\\n    </div>\\n</div>\\n\\n<div class=\\\"panel\\\">\\n    <label>\\n        <input name=\\\"autoPlayback\\\" type=\\\"checkbox\\\" \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.autoPlayback), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"/>\\n        <span class=\\\"icon-checkbox\\\"></span> \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Auto playback recording\", options) : helperMissing.call(depth0, \"__\", \"Auto playback recording\", options)))\n    + \"\\n    </label>\\n    <span class=\\\"icon-help tooltipstered\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n    <span class=\\\"tooltip-content\\\">\\n        \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Recorded audio is automatically played back after recording stops. During playback, no user interaction is possible and all buttons are disabled.\", options) : helperMissing.call(depth0, \"__\", \"Recorded audio is automatically played back after recording stops. During playback, no user interaction is possible and all buttons are disabled.\", options)))\n    + \"\\n    </span>\\n</div>\\n\\n<div class=\\\"panel\\\">\\n    <label for=\\\"max-records\\\" class=\\\"spinner\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Max attempts:\", options) : helperMissing.call(depth0, \"__\", \"Max attempts:\", options)))\n    + \"</label>\\n    <input id=\\\"max-records\\\" name=\\\"maxRecords\\\" value=\\\"\";\n  if (helper = helpers.maxRecords) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.maxRecords); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" class=\\\"large\\\" data-increment=\\\"1\\\" data-min=\\\"0\\\" type=\\\"text\\\" />\\n    <span class=\\\"icon-help tooltipstered\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n    <span class=\\\"tooltip-content\\\">\\n        \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Maximum number of recording attempts allowed to the test taker. Set to 0 to allow unlimited attempts. With a limit of 3, the test taker will be able to click 2 times on the reset button.\", options) : helperMissing.call(depth0, \"__\", \"Maximum number of recording attempts allowed to the test taker. Set to 0 to allow unlimited attempts. With a limit of 3, the test taker will be able to click 2 times on the reset button.\", options)))\n    + \"\\n    </span>\\n</div>\\n\\n<div class=\\\"panel\\\">\\n    <label for=\\\"max-recording-time\\\" class=\\\"spinner\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Time limit:\", options) : helperMissing.call(depth0, \"__\", \"Time limit:\", options)))\n    + \"</label>\\n    <input id=\\\"max-recording-time\\\" name=\\\"maxRecordingTime\\\" value=\\\"\";\n  if (helper = helpers.maxRecordingTime) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.maxRecordingTime); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" class=\\\"large\\\" data-increment=\\\"10\\\" data-min=\\\"10\\\" data-max=\\\"\";\n  if (helper = helpers.maximumRecordingTimeLimit) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.maximumRecordingTimeLimit); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" type=\\\"text\\\" />\\n    <span class=\\\"icon-help tooltipstered\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n    <span class=\\\"tooltip-content\\\">\\n        \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"In seconds. Maximum recording time allowed (cannot be less than 10seconds). Recording will automatically stop once reached.\", options) : helperMissing.call(depth0, \"__\", \"In seconds. Maximum recording time allowed (cannot be less than 10seconds). Recording will automatically stop once reached.\", options)))\n    + \"\\n    </span>\\n</div>\\n\\n<hr />\\n<div class=\\\"panel\\\">\\n    <label for=\\\"is-compressed\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Recording format\", options) : helperMissing.call(depth0, \"__\", \"Recording format\", options)))\n    + \"</label>\\n    <span class=\\\"icon-help tooltipstered\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n    <span class=\\\"tooltip-content\\\">\\n        \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"With compressed recording, the audio is saved as a webm or ogg file (smaller size). With uncompressed, as a lossless Wav file (much bigger size).\", options) : helperMissing.call(depth0, \"__\", \"With compressed recording, the audio is saved as a webm or ogg file (smaller size). With uncompressed, as a lossless Wav file (much bigger size).\", options)))\n    + \"\\n    </span>\\n    <select id=\\\"is-compressed\\\" name=\\\"isCompressed\\\">\\n        <option value=\\\"true\\\"\";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.isCompressed), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Compressed\", options) : helperMissing.call(depth0, \"__\", \"Compressed\", options)))\n    + \"</option>\\n        <option value=\\\"false\\\"\";\n  stack1 = helpers.unless.call(depth0, (depth0 && depth0.isCompressed), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Uncompressed\", options) : helperMissing.call(depth0, \"__\", \"Uncompressed\", options)))\n    + \"</option>\\n    </select>\\n</div>\\n\\n<div data-role=\\\"compressedOptions\\\" \";\n  stack1 = helpers.unless.call(depth0, (depth0 && depth0.isCompressed), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \">\\n    <div class=\\\"panel\\\">\\n        <label for=\\\"audio-bitrate\\\" class=\\\"spinner\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Audio bitrate:\", options) : helperMissing.call(depth0, \"__\", \"Audio bitrate:\", options)))\n    + \"</label>\\n        <input id=\\\"audio-bitrate\\\" name=\\\"audioBitrate\\\" value=\\\"\";\n  if (helper = helpers.audioBitrate) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.audioBitrate); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" class=\\\"large\\\" data-increment=\\\"1000\\\" data-min=\\\"8000\\\" type=\\\"text\\\" />\\n        <span class=\\\"icon-help tooltipstered\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n        <span class=\\\"tooltip-content\\\">\\n            \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"In bps (bits per second). Set the tradeoff between audio quality and filesize. With the default value (20.000bps), a 2minutes recording weights roughly 300KB.\", options) : helperMissing.call(depth0, \"__\", \"In bps (bits per second). Set the tradeoff between audio quality and filesize. With the default value (20.000bps), a 2minutes recording weights roughly 300KB.\", options)))\n    + \"\\n        </span>\\n    </div>\\n</div>\\n\\n<div data-role=\\\"uncompressedOptions\\\"  \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.isCompressed), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \">\\n    <div class=\\\"panel\\\">\\n        <label for=\\\"is-stereo\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Channels\", options) : helperMissing.call(depth0, \"__\", \"Channels\", options)))\n    + \"</label>\\n        <span class=\\\"icon-help tooltipstered\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n        <span class=\\\"tooltip-content\\\">\\n            \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Number of channels for the recording. Allow to cut the record size in half if used in mono.\", options) : helperMissing.call(depth0, \"__\", \"Number of channels for the recording. Allow to cut the record size in half if used in mono.\", options)))\n    + \"\\n        </span>\\n        <select id=\\\"is-stereo\\\" name=\\\"isStereo\\\">\\n            <option value=\\\"false\\\"\";\n  stack1 = helpers.unless.call(depth0, (depth0 && depth0.isStereo), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Mono\", options) : helperMissing.call(depth0, \"__\", \"Mono\", options)))\n    + \"</option>\\n            <option value=\\\"true\\\"\";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.isStereo), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Stereo\", options) : helperMissing.call(depth0, \"__\", \"Stereo\", options)))\n    + \"</option>\\n        </select>\\n    </div>\\n</div>\\n\\n<hr />\\n\\n<h3 class=\\\"txt-error\\\"><strong><span class=\\\"icon-warning\\\"></span> \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"For tests only\", options) : helperMissing.call(depth0, \"__\", \"For tests only\", options)))\n    + \"</strong></h3>\\n\\n<div class=\\\"panel\\\">\\n    <label>\\n        <input name=\\\"displayDownloadLink\\\" type=\\\"checkbox\\\" \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.displayDownloadLink), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"/>\\n        <span class=\\\"icon-checkbox\\\"></span>\\n        \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Allow download\", options) : helperMissing.call(depth0, \"__\", \"Allow download\", options)))\n    + \"\\n    </label>\\n    <span class=\\\"icon-help tooltipstered\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n    <span class=\\\"tooltip-content\\\">\\n        \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"This is for testing purposes only. Displays a link to download the recorded file once the recording stops. This shouldn't be used in a delivery context, as it would allow the test taker to download its own recording.\", options) : helperMissing.call(depth0, \"__\", \"This is for testing purposes only. Displays a link to download the recorded file once the recording stops. This shouldn't be used in a delivery context, as it would allow the test taker to download its own recording.\", options)))\n    + \"\\n    </span>\\n</div>\\n\\n<div class=\\\"panel\\\">\\n    <label for=\\\"partial-update-interval\\\" class=\\\"spinner\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Update interval:\", options) : helperMissing.call(depth0, \"__\", \"Update interval:\", options)))\n    + \"</label>\\n    <input id=\\\"partial-update-interval\\\" name=\\\"partialUpdateInterval\\\" value=\\\"\";\n  if (helper = helpers.partialUpdateInterval) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.partialUpdateInterval); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" class=\\\"large\\\" data-increment=\\\"1\\\" data-min=\\\"1\\\" data-max=\\\"60\\\" type=\\\"text\\\" />\\n    <span class=\\\"icon-help tooltipstered\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n    <span class=\\\"tooltip-content\\\">\\n        \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"In seconds. The time interval between partial updates of the recording.\", options) : helperMissing.call(depth0, \"__\", \"In seconds. The time interval between partial updates of the recording.\", options)))\n    + \"\\n    </span>\\n</div>\";\n  return buffer;\n  });\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017-2022 (original work) Open Assessment Technologies SA;\n */\ndefine('audioRecordingInteraction/creator/widget/states/Question',[\n    'lodash',\n    'i18n',\n    'jquery',\n    'module',\n    'taoQtiItem/qtiCreator/widgets/states/factory',\n    'taoQtiItem/qtiCreator/widgets/interactions/states/Question',\n    'taoQtiItem/qtiCreator/widgets/helpers/formElement',\n    'taoQtiItem/qtiCreator/widgets/helpers/pciMediaManager/pciMediaManager',\n    'taoQtiItem/qtiCreator/editor/simpleContentEditableElement',\n    'tpl!audioRecordingInteraction/creator/tpl/propertiesForm',\n    'util/typeCaster'\n], function (\n    _,\n    __,\n    $,\n    module,\n    stateFactory,\n    Question,\n    formElement,\n    pciMediaManagerFactory,\n    simpleEditor,\n    formTpl,\n    typeCaster\n) {\n    'use strict';\n\n    var AudioRecordingInteractionStateQuestion = stateFactory.extend(\n        Question,\n        function create() {},\n        function destroy() {\n            var $container = this.widget.$container;\n\n            simpleEditor.destroy($container);\n        }\n    );\n\n    /**\n     * Change callback of form values\n     * @param {Object} interaction\n     * @param {*} value\n     * @param {String} name\n     */\n    function configChangeCallBack(interaction, value, name) {\n        interaction.prop(name, value);\n        interaction.triggerPci('configChange', [interaction.getProperties()]);\n    }\n\n    AudioRecordingInteractionStateQuestion.prototype.initForm = function initForm() {\n        var _widget = this.widget,\n            $form = _widget.$form,\n            interaction = _widget.element,\n            response = interaction.getResponseDeclaration(),\n            $compressedOptions,\n            $uncompressedOptions,\n            $delayOptions;\n\n        var pciMediaManager = pciMediaManagerFactory(_widget);\n\n        //render the form using the form template\n        $form.html(\n            formTpl(\n                _.defaults({}, module.config(), {\n                    serial: response.serial,\n                    identifier: interaction.attr('responseIdentifier'),\n\n                    allowPlayback: typeCaster.strToBool(interaction.prop('allowPlayback'), true),\n                    autoStart: typeCaster.strToBool(interaction.prop('autoStart'), false),\n                    autoPlayback: typeCaster.strToBool(interaction.prop('autoPlayback'), false),\n\n                    delayMinutes: interaction.prop('delayMinutes'),\n                    delaySeconds: interaction.prop('delaySeconds'),\n\n                    maxRecords: interaction.prop('maxRecords'),\n                    maxRecordingTime: interaction.prop('maxRecordingTime'),\n\n                    isCompressed: typeCaster.strToBool(interaction.prop('isCompressed'), true),\n                    audioBitrate: interaction.prop('audioBitrate'),\n                    isStereo: typeCaster.strToBool(interaction.prop('isStereo'), false),\n\n                    updateResponsePartially: typeCaster.strToBool(interaction.prop('updateResponsePartially'), true),\n                    partialUpdateInterval: parseInt(interaction.prop('partialUpdateInterval'), 10) / 1000,\n\n                    displayDownloadLink: typeCaster.strToBool(interaction.prop('displayDownloadLink'), false)\n                })\n            )\n        );\n\n        $compressedOptions = $form.find('[data-role=\"compressedOptions\"]');\n        $uncompressedOptions = $form.find('[data-role=\"uncompressedOptions\"]');\n\n        $delayOptions = $form.find('[data-role=\"delayOptions\"]');\n\n        //init form javascript\n        formElement.initWidget($form);\n\n        //init data change callbacks\n        formElement.setChangeCallbacks(\n            $form,\n            interaction,\n            _.assign(\n                {\n                    identifier: function identifier(i, value) {\n                        response.id(value);\n                        interaction.attr('responseIdentifier', value);\n                    },\n\n                    allowPlayback: configChangeCallBack,\n\n                    autoStart: function autoStart(boundInteraction, value, name) {\n                        if (value) {\n                            $delayOptions.show();\n                        } else {\n                            $delayOptions.hide();\n                        }\n                        configChangeCallBack(boundInteraction, value, name);\n                    },\n                    autoPlayback: configChangeCallBack,\n\n                    delayMinutes: configChangeCallBack,\n                    delaySeconds: configChangeCallBack,\n\n                    maxRecords: configChangeCallBack,\n                    maxRecordingTime: configChangeCallBack,\n\n                    isCompressed: function isCompressed(boundInteraction, value, name) {\n                        if (value === 'true') {\n                            $uncompressedOptions.hide();\n                            $compressedOptions.show();\n                        } else {\n                            $uncompressedOptions.show();\n                            $compressedOptions.hide();\n                        }\n                        configChangeCallBack(boundInteraction, value, name);\n                    },\n                    audioBitrate: configChangeCallBack,\n                    isStereo: configChangeCallBack,\n\n                    partialUpdateInterval: function partialUpdateInterval(boundInteraction, value, name) {\n                        value = parseFloat(value) * 1000;\n                        configChangeCallBack(boundInteraction, value, name);\n                    },\n\n                    displayDownloadLink: configChangeCallBack\n                },\n                pciMediaManager.getChangeCallbacks()\n            )\n        );\n\n        pciMediaManager.init();\n    };\n\n    return AudioRecordingInteractionStateQuestion;\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017-2022 (original work) Open Assessment Technologies SA;\n */\ndefine('audioRecordingInteraction/creator/widget/states/states',[\n    'taoQtiItem/qtiCreator/widgets/states/factory',\n    'taoQtiItem/qtiCreator/widgets/interactions/customInteraction/states/states',\n    'audioRecordingInteraction/creator/widget/states/Question'\n], function (factory, states) {\n    'use strict';\n\n    return factory.createBundle(states, arguments, ['answer', 'correct', 'map']);\n});\n\n","\ndefine('css!audioRecordingInteraction/creator/css/audioRecordingInteraction',[],function(){});\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017-2022 (original work) Open Assessment Technologies SA;\n */\ndefine('audioRecordingInteraction/creator/widget/Widget',[\n    'taoQtiItem/qtiCreator/widgets/interactions/customInteraction/Widget',\n    'audioRecordingInteraction/creator/widget/states/states',\n    'css!audioRecordingInteraction/creator/css/audioRecordingInteraction'\n], function (Widget, states) {\n    'use strict';\n\n    var AudioRecordingInteractionWidget = Widget.clone();\n\n    AudioRecordingInteractionWidget.initCreator = function () {\n        var $interaction;\n\n        this.registerStates(states);\n\n        Widget.initCreator.call(this);\n\n        $interaction = this.$container.find('.audioRecordingInteraction');\n        if ($interaction.length) {\n            $interaction.addClass('tao-qti-creator-context');\n        }\n    };\n\n    return AudioRecordingInteractionWidget;\n});\n\n","\ndefine('tpl!audioRecordingInteraction/creator/tpl/markup', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  \n\n\n  return \"<div class=\\\"audioRecordingInteraction\\\">\\n    <div class=\\\"audio-rec\\\">\\n        <div class=\\\"input-meter\\\">\\n            <div class=\\\"countdown-pie-chart\\\"> </div>\\n            <div class=\\\"leds\\\"> </div>\\n            <div class=\\\"mic\\\"> </div>\\n        </div>\\n        <div class=\\\"progress\\\"> </div>\\n        <div class=\\\"controls\\\"> </div>\\n    </div>\\n</div>\";\n  });\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017-2021 (original work) Open Assessment Technologies SA;\n */\ndefine('audioRecordingInteraction/imsPciCreator',[\n    'lodash',\n    'taoQtiItem/qtiCreator/editor/customInteractionRegistry',\n    'audioRecordingInteraction/creator/widget/Widget',\n    'tpl!audioRecordingInteraction/creator/tpl/markup'\n], function (_, ciRegistry, Widget, markupTpl) {\n    'use strict';\n\n    var _typeIdentifier = 'audioRecordingInteraction';\n\n    var audioRecordingInteractionCreator = {\n        /**\n         * (required) Get the typeIdentifier of the custom interaction\n         *\n         * @returns {String}\n         */\n        getTypeIdentifier: function getTypeIdentifier() {\n            return _typeIdentifier;\n        },\n        /**\n         * (required) Get the widget prototype\n         * Used in the renderer\n         *\n         * @returns {Object} Widget\n         */\n        getWidget: function getWidget() {\n            var defaultProperties;\n            Widget.beforeStateInit(function (event, pci) {\n                if (pci.typeIdentifier && pci.typeIdentifier === _typeIdentifier) {\n                    // ensure all the properties get a default value\n                    defaultProperties = audioRecordingInteractionCreator.getDefaultProperties();\n                    _.forEach(defaultProperties, function(value, name) {\n                        if ((typeof pci.properties[name] === 'undefined') ||\n                            (typeof pci.properties[name] === 'string' && !pci.properties[name] && typeof value !== 'string')) {\n                            pci.properties[name] = value;\n                        }\n                    });\n                }\n            });\n            return Widget;\n        },\n        /**\n         * (optional) Get the default properties values of the pci.\n         * Used on new pci instance creation\n         *\n         * @returns {Object}\n         */\n        getDefaultProperties: function getDefaultProperties() {\n            return {\n                isReviewMode: false,\n                allowPlayback: true,\n                autoStart: false,\n                autoPlayback: false,\n\n                delayMinutes: 0,\n                delaySeconds: 0,\n\n                maxRecords: 2,\n                maxRecordingTime: 120,\n\n                isCompressed: true,\n                audioBitrate: 20000,\n                isStereo: false,\n\n                media: {\n                    autostart: true,\n                    replayTimeout: 5,\n                    maxPlays: 2\n                },\n\n                displayDownloadLink: false,\n                updateResponsePartially: true,\n                partialUpdateInterval: 1000\n            };\n        },\n        /**\n         * (optional) Callback to execute on the\n         * Used on new pci instance creation\n         *\n         * @returns {Object}\n         */\n        afterCreate: function afterCreate() {\n            //do some stuff\n        },\n        /**\n         * (required) Gives the qti pci xml template\n         *\n         * @returns {function} handlebar template\n         */\n        getMarkupTemplate: function getMarkupTemplate() {\n            return markupTpl;\n        },\n        /**\n         * (optional) Allows passing additional data to xml template\n         *\n         * @param {Object} pci\n         * @param {Object} defaultData\n         * @returns {Object} handlebar template\n         */\n        getMarkupData: function getMarkupData(pci, defaultData) {\n            return defaultData;\n        }\n    };\n\n    //since we assume we are in a tao context, there is no use to expose the a global object for lib registration\n    //all libs should be declared here\n    return audioRecordingInteractionCreator;\n});\n\n","\n(function(c){var d=document,a='appendChild',i='styleSheet',s=d.createElement('style');s.type='text/css';d.getElementsByTagName('head')[0][a](s);s[i]?s[i].cssText=c:s[a](d.createTextNode(c));})\n('.item-editor-interaction-related div[data-role=\\\"delayOptions\\\"] .panel{margin-top:-15px}.item-editor-interaction-related div[data-role=\\\"delayOptions\\\"] .panel label[for=\\\"delayMinutes\\\"]{min-width:0}.item-editor-interaction-related div[data-role=\\\"delayOptions\\\"] .panel label[for=\\\"delaySeconds\\\"]{min-width:0;padding-left:18px}\\n\\n/*# sourceMappingURL=audioRecordingInteraction.css.map */');\n"]}
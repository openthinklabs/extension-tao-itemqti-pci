// =============
// TAO specific
// =============

@import "inc/bootstrap";

// Color mapping

$disabledBg: whiten($websiteBorder, .3);
$disabledTxt: black;
$disabledTxtShadow: white(.8);

$enabledBg: whiten($info, .1);
$enabledTxt: white;
$enabledTxtShadow: blacken($info, .2);

$activeBg: whiten($activeInteraction, .1);
$activeTxt: white;
$activeTxtShadow: blacken($activeInteraction, .2);

$record: $activeInteraction;
$playback: whiten($info, .3);

$info: rgb(14, 93, 145);
$infoBgColor: whiten($info, 0.8);
$infoBorderColor: whiten($info, 0.1);
$modalShadowColor: #666666;

@mixin ltr() {
  &,
  body [dir=ltr] & {
      @content;
  }
}

@mixin rtl() {
  [dir=rtl] & {
      @content;
  }
}


// =============
// Interaction
// =============
:root {
  --color-audioRecording-info: #{$info};
  --color-audioRecording-info-bg: #{$infoBgColor};
  --color-audioRecording-info-border: #{$infoBorderColor};
  --color-audioRecording-modal-shadow: #{$modalShadowColor};

  --color-audioRecording-action-link: #{$actionLinkColor};
  --color-audioRecording-text: #{$textColor};
}

.qti-customInteraction {
  .audioRecordingInteraction {
    // expose all used colours as css variables
    --color-disabled-bg: #{$disabledBg};
    --color-disabled-bg-lighter: #{whiten($disabledBg, .5)};
    --color-disabled-bg-lightest: #{whiten($disabledBg, .75)};
    --color-disabled-bg-darker: #{darken($disabledBg, .2)};
    --color-disabled-txt: #{$disabledTxt};
    --color-disabled-txt-shadow: #{$disabledTxtShadow};

    --color-enabled-bg: #{$enabledBg};
    --color-enabled-txt: #{$enabledTxt};
    --color-enabled-txt-shadow: #{$enabledTxtShadow};

    --color-active-bg: #{$activeBg};
    --color-active-bg-lighter: #{whiten($activeBg, .9)};
    --color-active-txt: #{$activeTxt};
    --color-active-txt-shadow: #{$activeTxtShadow};

    --color-record: #{$record};
    --color-record-lighter: #{whiten($record, .9)};
    --color-playback: #{$playback};
    --color-playback-lighter: #{whiten($playback, .9)};
    --color-countdown-bg: #{transparentize($disabledBg, .55)};

    --color-info-border: #{$infoBorderColor};
    --color-ui-general-content-bg: #{$uiGeneralContentBg};

    padding: 10px;

    //audio-rec controls and bar always ltr
    .audio-rec{
      text-align: left;
    }

    // input meter

    .input-meter {
      border: 2px solid var(--color-disabled-bg-lighter);
      border-radius: 10px;
      width: 58px;
      padding: 10px;

      margin-top: 2px;
      display: flex;
      position: relative;


        float: left;
        margin-right: 10px;
        margin-left: 0;

      @include rtl {
        flex-direction: row-reverse;
      }

      &.record {
        .mic {
          path {
            fill: var(--color-record);
          }
        }
        border-color: var(--color-record);
        background-color: var(--color-record-lighter);
      }

      .leds {
        flex: 0 0 10px;
      }

      .mic {
        flex: 0 0 28px;

        svg {
          height: 28px;
          width: 28px;
          margin-top: 10px;
        }
        path {
          fill: var(--color-disabled-bg);
        }
      }
    }


    // Controls

    .audiorec-control {
      border-radius: 3px;
      font-size: 14px !important;
      cursor: pointer;
      text-decoration: none !important;
      vertical-align: middle;
      outline: 0;
      overflow: visible;
      border: none;
      line-height: initial;
      padding: 8px 16px;
      font-weight: normal;
      font-style: normal;
      text-align: center;
      height: auto;
      margin: 10px 10px 10px 0;
      display: flex;

      @include rtl {
        flex-direction: row-reverse;
      }

      &:focus {
        outline: 2px dotted var(--color-info-border);
        outline-offset: 2px;
      }

      &.disabled {
        background-color: var(--color-disabled-bg);
        text-shadow: 1px 1px 0 var(--color-disabled-txt-shadow) !important;
        cursor: not-allowed !important;
        opacity: .55 !important;
        color: var(--color-disabled-txt) !important;
        fill: var(--color-disabled-txt) !important;
      }

      &.enabled {
        background-color: var(--color-enabled-bg);
        color: var(--color-enabled-txt);
        fill: var(--color-enabled-txt);
        text-shadow: 1px 1px 0 var(--color-enabled-txt-shadow);
        cursor: pointer !important;

        &:hover {
          opacity: 0.85;
        }
      }

      &:active,
      &.active {
        background-color: var(--color-active-bg);
        color: var(--color-active-txt);
        fill: var(--color-active-txt);
        text-shadow: 1px 1px 0 var(--color-active-txt-shadow);
        cursor: not-allowed !important;
      }

      svg {
        width: 16px;
        height: 16px;
      }
    }

    .controls {
      display: flex;
      flex-wrap: wrap;

      @include ltr {
        flex-direction: row;
        justify-content: flex-start;
      }
      @include rtl {
        flex-direction: row-reverse;
      }
    }

    // Progress bar

    @mixin progressBarColor($borderColor, $valueColor, $bgColor, $bgColorLighter) {
      border: $borderColor 2px solid;

      // progress value color
      &::-webkit-progress-value {
        background-color: $valueColor;
      }
      &::-moz-progress-bar {
        background-color: $valueColor;
      }

      // background color
      color: $bgColor; // FF
      &::-webkit-progress-bar {
        background-color: $bgColorLighter; // Chrome
      }
    }

    progress {
      -webkit-appearance: none;
      -moz-appearance: none;

      width: 75%;
      height: 10px;
      border-radius: 5px;
      @include ltr {
        transform: scaleX(1);
      }

      @include rtl {
        transform: scaleX(-1);
      }

      @include progressBarColor(
        var(--color-disabled-bg-darker),
        var(--color-disabled-bg),
        var(--color-disabled-bg-lighter),
        var(--color-disabled-bg-lightest)
      );

      &.record {
        @include progressBarColor(
          var(--color-record),
          var(--color-record),
          var(--color-record-lighter),
          var(--color-record-lighter)
        );
      }

      &.playback {
        @include progressBarColor(
          var(--color-playback),
          var(--color-playback),
          var(--color-playback-lighter),
          var(--color-playback-lighter)
        );
      }
    }

    // Countdown timer as a pie chart
    --size-countdown: 52px;

    .countdown-pie-chart {
      position: absolute;
      top: 0;
      left: 0;
      width: calc(100% + 4px);
      height: calc(100% + 4px);
      margin: -2px;

      .countdown-pie-container {
        width: 100%;
        height: 100%;
        border-radius: 10px;
        background-color: var(--color-countdown-bg);
        @include animation(disable);
        animation: disable 15s steps(1, end) 1 forwards paused;

        .countdown-pie-circle {
          width: var(--size-countdown);
          height: var(--size-countdown);
          position: relative;
          top: 50%;
          left: 50%;
          transform: translate(-50%, -50%);
          background: var(--color-enabled-bg);
          border-radius: 50%;

          .countdown-pie {
            width: 50%;
            height: 100%;
            transform-origin: 100% 50%;
            position: absolute;
            background: var(--color-ui-general-content-bg);
          }

          .countdown-pie-spinner {
            border-radius: 100% 0 0 100% / 50% 0 0 50%;
            z-index: 20;
            border-right: none;
            animation: rota 15s linear 1 forwards paused;
          }

          &:hover .countdown-pie-spinner,
          &:hover .countdown-pie-filler,
          &:hover .countdown-pie-mask {
            cursor: not-allowed;
          }

          .countdown-pie-filler {
            border-radius: 0 100% 100% 0 / 0 50% 50% 0;
            left: 50%;
            opacity: 0;
            z-index: 100;
            border-left: none;
            animation: opa 15s steps(1,end) 1 reverse forwards paused;
          }

          .countdown-pie-mask {
            width: 50%;
            height: 100%;
            position: absolute;
            background: inherit;
            opacity: 1;
            z-index: 300;
            border-bottom-left-radius: calc(var(--size-countdown) * 2);
            border-top-left-radius: calc(var(--size-countdown) * 2);
            border-right: 0;
            animation: opa 15s steps(1,end) 1 forwards paused;
          }

          @keyframes rota {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
          }

          @keyframes opa {
            0% { opacity: 1; }
            50%, 100% { opacity: 0; }
          }

          @keyframes disable {
            0%, 99% { opacity: 1; }
            100% { opacity: 0; }
          }
        }
      }
    }
  }
}

/* Modal styles */
.modal {
    background-color: var(--color-audioRecording-info-bg);
    border: 1px solid var(--color-audioRecording-info-border);
    box-shadow: 3px 3px 5px var(--color-audioRecording-modal-shadow);
    height: auto;
    opacity: 0;
    top: -100%;
    padding: 40px;
    position: fixed;
    z-index: 105002;
    margin: auto;
    left: 0;
    right: 0;
    overflow-x: hidden;
    overflow-y: auto;
    max-width: 100vw;
    max-height: calc(100vh - 40px);

    &:focus {
        outline: none;
    }

    .modal-close {
        position: absolute;
        right: 12px;
        top: 10px;
        cursor: pointer;
        font-weight: bold;
        color: var(--color-audioRecording-text);

        [dir="rtl"] & {
            right: auto;
            left: 12px;
        }

        &:hover {
            opacity: 0.6;
        }
    }

    // rewrite rules from _buttons.scss
    button.modal-close {
        color: var(--color-audioRecording-text) !important;
        background-color: transparent;
        padding: 0;
        height: 20px;
    }

    .modal-close:focus {
        outline: 3px solid var(--color-audioRecording-action-link);
        outline-offset: 3px;
    }

    .modal-body {
        h4 {
            @include font-size(16);
            margin-top: 0;
            margin-bottom: 8px;
        }

        .content,
        .message {
            margin-bottom: 8px;
        }
    }

    &[class^="icon-"],
    &[class*=" icon-"] {
        &:before {
            @include font-size(30);
            color: var(--color-audioRecording-info);
            position: absolute;
        }

        &.info {
            &:before {
                color: var(--color-audioRecording-info);
            }
        }

        .modal-body {
            font-family: $regularFont;
            line-height: 1.4;
            margin-left: 4.5rem;
        }
    }
}

.modal-bg {
    background: none repeat scroll 0 0 black();
    opacity: 0.45;
    display: none;
    position: fixed;
    height: 100%;
    width: 100%;
    left: 0;
    top: 0;
    z-index: 100001;
    overflow: hidden;
}

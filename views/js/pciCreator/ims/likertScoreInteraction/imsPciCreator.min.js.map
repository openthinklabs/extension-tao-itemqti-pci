{"version":3,"names":["define","hb","template","Handlebars","depth0","helpers","partials","data","program1","stack1","helper","buffer","escapeExpression","key","apply","call","selected","hash","inverse","self","noop","fn","program","program2","label","program4","compilerInfo","merge","options","helperMissing","__","each","levels","icons","numbers","stateFactory","Question","formElement","simpleEditor","containerEditor","formTpl","_","LikertInteractionStateQuestion","extend","initQuestionState","$container","widget","$prompt","find","interaction","element","create","change","text","updateMarkup","markup","markupSelector","related","areaBroker","getAreaBroker","prop","$original","exitQuestionState","destroy","prototype","initForm","_widget","$form","response","getResponseDeclaration","level","parseInt","levelData","includes","forEach","lvl","html","serial","initWidget","setChangeCallbacks","value","triggerPci","Answer","answerStateHelper","InteractionStateAnswer","initAnswerState","exitAnswerState","initResponseForm","rpTemplates","factory","states","createBundle","arguments","Widget","$interaction","likertScoreInteractionWidget","clone","initCreator","registerStates","setTemplate","length","addClass","functionType","prompt","markupTpl","_typeIdentifier","getTypeIdentifier","getWidget","getDefaultProperties","\"label-min\"","\"label-max\"","afterCreate","pci","getMarkupTemplate","getMarkupData","defaultData","IMSPCI"],"sources":["../build/config-wrap-start-default.js","../../../qtiItemPci/views/js/pciCreator/ims/likertScoreInteraction/creator/tpl/propertiesForm!tpl","../../../qtiItemPci/views/js/pciCreator/ims/likertScoreInteraction/creator/widget/states/Question.js","../../../qtiItemPci/views/js/pciCreator/ims/likertScoreInteraction/creator/widget/states/Answer.js","../../../qtiItemPci/views/js/pciCreator/ims/likertScoreInteraction/creator/widget/states/states.js","../../../qtiItemPci/views/js/pciCreator/ims/likertScoreInteraction/creator/widget/Widget.js","../../../qtiItemPci/views/js/pciCreator/ims/likertScoreInteraction/creator/tpl/markup!tpl","../../../qtiItemPci/views/js/pciCreator/ims/likertScoreInteraction/imsPciCreator.js","../build/config-wrap-end-default.js"],"sourcesContent":["\n","\ndefine('tpl!likertScoreInteraction/creator/tpl/propertiesForm', ['handlebars'], function(hb){ return hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, self=this, helperMissing=helpers.helperMissing;\n\nfunction program1(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \"\\n        <option value=\\\"\"\n    + escapeExpression(((stack1 = (data == null || data === false ? data : data.key)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"\\\" \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.selected), {hash:{},inverse:self.noop,fn:self.program(2, program2, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \">\";\n  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</option>\\n        \";\n  return buffer;\n  }\nfunction program2(depth0,data) {\n  \n  \n  return \"selected=\\\"selected\\\"\";\n  }\n\nfunction program4(depth0,data) {\n  \n  \n  return \"checked=\\\"checked\\\"\";\n  }\n\n  buffer += \"<div class=\\\"panel\\\">\\n    <label for=\\\"level\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Level\", options) : helperMissing.call(depth0, \"__\", \"Level\", options)))\n    + \"</label>\\n    <span class=\\\"icon-help tooltipstered\\\" data-tooltip=\\\"~ .tooltip-content:first\\\" data-tooltip-theme=\\\"info\\\"></span>\\n    <span class=\\\"tooltip-content\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Scale size\", options) : helperMissing.call(depth0, \"__\", \"Scale size\", options)))\n    + \"</span>\\n    <select name=\\\"level\\\" class=\\\"select2\\\" data-has-search=\\\"false\\\">\\n        \";\n  stack1 = helpers.each.call(depth0, (depth0 && depth0.levels), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n    </select>\\n</div>\\n\\n<div class=\\\"panel\\\">\\n    <label>\\n        <input name=\\\"icons\\\" type=\\\"checkbox\\\" \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.icons), {hash:{},inverse:self.noop,fn:self.program(4, program4, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"/>\\n        <span class=\\\"icon-checkbox\\\"></span> \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Show icons\", options) : helperMissing.call(depth0, \"__\", \"Show icons\", options)))\n    + \"\\n    </label>\\n    <span class=\\\"icon-help tooltipstered\\\" data-tooltip=\\\"~ .tooltip-content:first\\\" data-tooltip-theme=\\\"info\\\"></span>\\n    <span class=\\\"tooltip-content\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Display icons at each end, or not\", options) : helperMissing.call(depth0, \"__\", \"Display icons at each end, or not\", options)))\n    + \"</span>\\n</div>\\n\\n<div class=\\\"panel\\\">\\n    <label>\\n        <input name=\\\"numbers\\\" type=\\\"checkbox\\\" \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.numbers), {hash:{},inverse:self.noop,fn:self.program(4, program4, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"/>\\n        <span class=\\\"icon-checkbox\\\"></span> \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Show numbers\", options) : helperMissing.call(depth0, \"__\", \"Show numbers\", options)))\n    + \"\\n    </label>\\n    <span class=\\\"icon-help tooltipstered\\\" data-tooltip=\\\"~ .tooltip-content:first\\\" data-tooltip-theme=\\\"info\\\"></span>\\n    <span class=\\\"tooltip-content\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Display numbers above the choices, or not\", options) : helperMissing.call(depth0, \"__\", \"Display numbers above the choices, or not\", options)))\n    + \"</span>\\n</div>\";\n  return buffer;\n  }); });\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016-2024 (original work) Open Assessment Technologies SA;\n *\n */\ndefine('likertScoreInteraction/creator/widget/states/Question',[\n    'taoQtiItem/qtiCreator/widgets/states/factory',\n    'taoQtiItem/qtiCreator/widgets/interactions/states/Question',\n    'taoQtiItem/qtiCreator/widgets/helpers/formElement',\n    'taoQtiItem/qtiCreator/editor/simpleContentEditableElement',\n    'taoQtiItem/qtiCreator/editor/containerEditor',\n    'tpl!likertScoreInteraction/creator/tpl/propertiesForm',\n    'lodash',\n    'jquery'\n], function(stateFactory, Question, formElement, simpleEditor, containerEditor, formTpl, _){\n    'use strict';\n\n    const LikertInteractionStateQuestion = stateFactory.extend(Question, function initQuestionState() {\n        const $container = this.widget.$container;\n        const $prompt = $container.find('.prompt');\n        const interaction = this.widget.element;\n\n        containerEditor.create($prompt, {\n            change : function change(text){\n                interaction.data('prompt', text);\n                interaction.updateMarkup();\n            },\n            markup : interaction.markup,\n            markupSelector : '.prompt',\n            related : interaction,\n            areaBroker: this.widget.getAreaBroker()\n        });\n\n        simpleEditor.create($container, '.likert-label-min', function(text) {\n            interaction.prop('label-min', text);\n        });\n\n        simpleEditor.create($container, '.likert-label-max', function(text) {\n            interaction.prop('label-max', text);\n        });\n\n        this.widget.$original.find('.likert input').prop('disabled', true);\n\n    }, function exitQuestionState() {\n        const $container = this.widget.$container;\n        const $prompt = $container.find('.prompt');\n\n        this.widget.$original.find('.likert input').prop('disabled', false);\n\n        simpleEditor.destroy(this.widget.$container);\n        containerEditor.destroy($prompt);\n    });\n\n    LikertInteractionStateQuestion.prototype.initForm = function(){\n        const _widget = this.widget;\n        const $form = _widget.$form;\n        const interaction = _widget.element;\n        const response = interaction.getResponseDeclaration();\n\n        const level = parseInt(interaction.prop('level')) || 5;\n        const levels = [2, 3, 4, 5, 6, 7, 8, 9, 10];\n        const levelData = {};\n\n        const icons = [true, 'true'].includes(interaction.prop('icons'));\n        const numbers = [true, 'true'].includes(interaction.prop('numbers'));\n\n        //build select option data for the template\n        levels.forEach(lvl => {\n            levelData[lvl] = {\n                label: lvl,\n                selected: lvl === level\n            };\n        });\n\n        //render the form using the form template\n        $form.html(formTpl({\n            serial: response.serial,\n            levels: levelData,\n            icons,\n            numbers\n        }));\n\n        //init form javascript\n        formElement.initWidget($form);\n\n        //init data change callbacks\n        formElement.setChangeCallbacks($form, interaction, {\n            level: function(interaction, value) {\n                //update the pci property value:\n                interaction.prop('level', value);\n\n                //trigger change event:\n                interaction.triggerPci('configChange', [{ level: parseInt(value) }]);\n            },\n\n            icons: function(interaction, value) {\n                interaction.prop('icons', value);\n                interaction.triggerPci('configChange', [{ icons: value }]);\n            },\n\n            numbers: function(interaction, value) {\n                interaction.prop('numbers', value);\n                interaction.triggerPci('configChange', [{ numbers: value }]);\n            }\n        });\n    };\n\n    return LikertInteractionStateQuestion;\n});\n\n","define('likertScoreInteraction/creator/widget/states/Answer',[\n    'taoQtiItem/qtiCreator/widgets/states/factory',\n    'taoQtiItem/qtiCreator/widgets/interactions/states/Answer',\n    'taoQtiItem/qtiCreator/widgets/interactions/helpers/answerState',\n    'taoQtiItem/qtiCreator/widgets/helpers/content'\n], function(stateFactory, Answer, answerStateHelper){\n    'use strict';\n\n    var InteractionStateAnswer = stateFactory.extend(Answer, function initAnswerState(){\n        this.widget.$original.find('.likert input').prop('disabled', true);\n    }, function exitAnswerState(){\n        this.widget.$original.find('.likert input').prop('disabled', false);\n    });\n\n    InteractionStateAnswer.prototype.initResponseForm = function initResponseForm(){\n\n        // CUSTOM option won't appear except with xmlEditRp extension!\n        answerStateHelper.initResponseForm(this.widget, {rpTemplates : ['CUSTOM', 'NONE']});\n    };\n\n    return InteractionStateAnswer;\n});\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA;\n *\n */\ndefine('likertScoreInteraction/creator/widget/states/states',[\n    'taoQtiItem/qtiCreator/widgets/states/factory',\n    'taoQtiItem/qtiCreator/widgets/interactions/customInteraction/states/states',\n    'likertScoreInteraction/creator/widget/states/Question',\n    'likertScoreInteraction/creator/widget/states/Answer'\n], function(factory, states){\n    'use strict';\n    return factory.createBundle(states, arguments, ['correct', 'map']);\n});\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016-2024 (original work) Open Assessment Technologies SA;\n *\n */\ndefine('likertScoreInteraction/creator/widget/Widget',[\n    'taoQtiItem/qtiCreator/widgets/interactions/customInteraction/Widget',\n    'likertScoreInteraction/creator/widget/states/states'\n], function(Widget, states){\n    'use strict';\n\n    var likertScoreInteractionWidget = Widget.clone();\n    var $interaction;\n\n    likertScoreInteractionWidget.initCreator = function(){\n\n        this.registerStates(states);\n\n        Widget.initCreator.call(this);\n\n        //for existing likert score PCI, ensure that the rp template is always NONE\n        this.element.getResponseDeclaration().setTemplate('NONE');\n\n        $interaction = this.$container.find('.likertScoreInteraction');\n        if ($interaction.length) {\n            $interaction.addClass('tao-qti-creator-context');\n        }\n    };\n\n    return likertScoreInteractionWidget;\n});\n\n","\ndefine('tpl!likertScoreInteraction/creator/tpl/markup', ['handlebars'], function(hb){ return hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, functionType=\"function\";\n\n\n  buffer += \"<div class=\\\"likertScoreInteraction\\\">\\n    <div class=\\\"prompt\\\">\";\n  if (helper = helpers.prompt) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.prompt); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"</div>\\n    <div class=\\\"scale\\\">\\n        <ul class=\\\"likert\\\"></ul>\\n    </div>\\n</div>\";\n  return buffer;\n  }); });\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016-2024 (original work) Open Assessment Technologies SA;\n *\n */\ndefine('likertScoreInteraction/imsPciCreator',[\n    'lodash',\n    'likertScoreInteraction/creator/widget/Widget',\n    'tpl!likertScoreInteraction/creator/tpl/markup'\n], function(_, Widget, markupTpl){\n    'use strict';\n\n    const _typeIdentifier = 'likertScoreInteraction';\n\n    return {\n        /**\n         * (required) Get the typeIdentifier of the custom interaction\n         *\n         * @returns {String}\n         */\n        getTypeIdentifier: function() {\n            return _typeIdentifier;\n        },\n\n        /**\n         * (required) Get the widget prototype\n         * Used in the renderer\n         *\n         * @returns {Object} Widget\n         */\n        getWidget: function() {\n            return Widget;\n        },\n\n        /**\n         * (optional) Get the default properties values of the pci.\n         * Used on new pci instance creation\n         *\n         * @returns {Object}\n         */\n        getDefaultProperties: function() {\n            return {\n                level: 5,\n                'label-min': 'min',\n                'label-max': 'max',\n                icons: false,\n                numbers: false,\n            };\n        },\n\n        /**\n         * (optional) Callback to execute on the\n         * Used on new pci instance creation\n         *\n         * @returns {Object}\n         */\n        afterCreate: function(pci) {\n            //always set the NONE response processing mode to likert score\n            pci.getResponseDeclaration().setTemplate('NONE');\n        },\n\n        /**\n         * (required) Gives the qti pci xml template\n         *\n         * @returns {function} handlebar template\n         */\n        getMarkupTemplate: function() {\n            return markupTpl;\n        },\n\n        /**\n         * (optional) Allows passing additional data to xml template\n         *\n         * @returns {function} handlebar template\n         */\n        getMarkupData: function(pci, defaultData) {\n            defaultData.prompt = pci.data('prompt');\n            return defaultData;\n        }\n    };\n});\n\n","define(['likertScoreInteraction/imsPciCreator'],function(IMSPCI){return IMSPCI});\n"],"mappings":"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"}
{"version":3,"names":["define","thumbDown","thumbUp","assets","renderChoices","id","container","config","rootElt","querySelector","ul","disabled","classList","contains","Error","numbers","add","remove","innerHTML","level","parseInt","i","li","document","createElement","input","setAttribute","append","renderLabels","div","labelMin","labelMax","parseSvgString","svgString","DOMParser","parseFromString","iconMin","iconMax","newChildren","icons","child","render","events","get","event","on","callback","name","tokens","split","shift","push","ns","off","trigger","data","forEach","e","apply","type","EventMgr","addEventMgr","instance","eventMgr","qtiCustomInteractionContext","renderer","likertInteractionFactory","typeIdentifier","_typeIdentifier","getResponse","checkedInput","dom","value","base","integer","destroy","getTypeIdentifier","initialize","properties","setResponse","response","resetResponse","setSerializedState","state","getSerializedState","register","getInstance","likertInteraction","pciInstance","getState","oncompleted","boundTo","responseIdentifier","Object","keys","newProperties","assign","onready","c","d","s","getElementsByTagName","appendChild","styleSheet","cssText","createTextNode","IMSPCI"],"sources":["../build/config-wrap-start-default.js","../../../qtiItemPci/views/js/pciCreator/ims/likertScoreInteraction/runtime/js/assets.js","../../../qtiItemPci/views/js/pciCreator/ims/likertScoreInteraction/runtime/css/likertScoreInteraction!css","../../../qtiItemPci/views/js/pciCreator/ims/likertScoreInteraction/runtime/js/renderer.js","../../../taoQtiItem/views/js/portableLib/OAT/util/EventMgr.js","../../../taoQtiItem/views/js/portableLib/OAT/util/event.js","../../../qtiItemPci/views/js/pciCreator/ims/likertScoreInteraction/runtime/js/likertScoreInteraction.js","../../../../../../../../../../onLayerEnd0.js","../build/config-wrap-end-default.js"],"sourcesContent":["\n","define('likertScoreInteraction/runtime/js/assets',[],function() {\n    'use strict';\n    return {\n        thumbDown: '<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" width=\"20px\" height=\"15px\" viewBox=\"0 0 456.814 456.814\" style=\"width: 20px; height: 15px;\"><g><g><path d=\"M100.5,45.683H18.276c-4.949,0-9.231,1.809-12.851,5.426C1.809,54.724,0,59.007,0,63.954v182.729c0,4.948,1.809,9.233,5.426,12.847c3.616,3.614,7.898,5.425,12.851,5.425H100.5c4.948,0,9.229-1.811,12.847-5.425c3.616-3.613,5.424-7.898,5.424-12.847V63.954c0-4.947-1.809-9.229-5.424-12.845C109.73,47.491,105.449,45.683,100.5,45.683z M67.665,113.351c-3.616,3.617-7.898,5.424-12.847,5.424c-5.14,0-9.471-1.807-12.99-5.424c-3.521-3.617-5.281-7.898-5.281-12.85c0-5.137,1.759-9.469,5.281-12.991c3.52-3.521,7.85-5.28,12.99-5.28c4.949,0,9.231,1.759,12.847,5.28c3.621,3.521,5.426,7.854,5.426,12.991C73.091,105.449,71.282,109.73,67.665,113.351z\"></path><path d=\"M441.106,204.141c2.861-8.376,4.281-15.608,4.261-21.693c0.575-14.466-3.519-27.504-12.279-39.114c3.237-10.66,3.237-21.797,0-33.407c-2.847-10.85-7.994-19.792-15.413-26.835c1.711-21.32-2.95-38.543-13.99-51.678c-12.183-14.465-30.929-21.892-56.246-22.27h-10.28h-21.696h-4.853c-12.56,0-26.269,1.475-41.114,4.425c-14.838,2.952-26.405,5.713-34.68,8.282c-8.28,2.568-19.75,6.328-34.403,11.276c-23.413,8.183-38.45,12.371-45.111,12.56c-4.949,0.193-9.231,2.046-12.847,5.569c-3.617,3.518-5.426,7.755-5.426,12.703V246.97c0,4.757,1.718,8.898,5.142,12.416c3.424,3.524,7.517,5.476,12.275,5.858c4.565,0.384,11.799,5.996,21.698,16.844c9.9,10.849,19.511,22.368,28.836,34.551c12.944,16.553,22.558,27.973,28.837,34.256c3.424,3.422,6.37,7.99,8.848,13.702c2.472,5.708,4.142,10.324,5.004,13.846c0.855,3.519,2.135,9.274,3.856,17.275c1.328,7.419,2.519,13.227,3.569,17.412c1.047,4.188,2.898,9.137,5.564,14.845c2.67,5.716,5.903,10.469,9.712,14.274c3.614,3.62,7.898,5.431,12.847,5.431c8.761,0,16.604-0.999,23.559-2.998c6.947-1.998,12.655-4.469,17.131-7.419c4.477-2.957,8.282-6.803,11.424-11.566c3.142-4.757,5.424-9.042,6.851-12.848c1.431-3.812,2.574-8.562,3.426-14.27c0.855-5.716,1.338-10,1.431-12.854c0.093-2.854,0.144-6.563,0.144-11.136c0-7.228-0.948-14.51-2.851-21.84c-1.909-7.323-3.72-12.895-5.428-16.707c-1.711-3.806-4.281-9.227-7.706-16.269c-0.575-1.144-1.523-2.861-2.854-5.144c-1.328-2.283-2.382-4.381-3.142-6.283c-0.763-1.902-1.522-4.186-2.279-6.852h79.086c14.843,0,27.645-5.428,38.397-16.279c10.756-10.848,16.228-23.694,16.419-38.54C456.811,229.931,451.575,215.75,441.106,204.141z\"></path></g></g></svg>',\n        thumbUp: '<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" width=\"20px\" height=\"15px\" viewBox=\"0 0 456.814 456.814\" style=\"width: 20px; height: 15px;\" xml:space=\"preserve\"><g><g><path d=\"M441.11,252.677c10.468-11.99,15.704-26.169,15.704-42.54c0-14.846-5.432-27.692-16.259-38.547c-10.849-10.854-23.695-16.278-38.541-16.278h-79.082c0.76-2.664,1.522-4.948,2.282-6.851c0.753-1.903,1.811-3.999,3.138-6.283c1.328-2.285,2.283-3.999,2.852-5.139c3.425-6.468,6.047-11.801,7.857-15.985c1.807-4.192,3.606-9.9,5.42-17.133c1.811-7.229,2.711-14.465,2.711-21.698c0-4.566-0.055-8.281-0.145-11.134c-0.089-2.855-0.574-7.139-1.423-12.85c-0.862-5.708-2.006-10.467-3.43-14.272c-1.43-3.806-3.716-8.092-6.851-12.847c-3.142-4.764-6.947-8.613-11.424-11.565c-4.476-2.95-10.184-5.424-17.131-7.421c-6.954-1.999-14.801-2.998-23.562-2.998c-4.948,0-9.227,1.809-12.847,5.426c-3.806,3.806-7.047,8.564-9.709,14.272c-2.666,5.711-4.523,10.66-5.571,14.849c-1.047,4.187-2.238,9.994-3.565,17.415c-1.719,7.998-2.998,13.752-3.86,17.273c-0.855,3.521-2.525,8.136-4.997,13.845c-2.477,5.713-5.424,10.278-8.851,13.706c-6.28,6.28-15.891,17.701-28.837,34.259c-9.329,12.18-18.94,23.695-28.837,34.545c-9.899,10.852-17.131,16.466-21.698,16.847c-4.755,0.38-8.848,2.331-12.275,5.854c-3.427,3.521-5.14,7.662-5.14,12.419v183.01c0,4.949,1.807,9.182,5.424,12.703c3.615,3.525,7.898,5.38,12.847,5.571c6.661,0.191,21.698,4.374,45.111,12.566c14.654,4.941,26.12,8.706,34.4,11.272c8.278,2.566,19.849,5.328,34.684,8.282c14.849,2.949,28.551,4.428,41.11,4.428h4.855h21.7h10.276c25.321-0.38,44.061-7.806,56.247-22.268c11.036-13.135,15.697-30.361,13.99-51.679c7.422-7.042,12.565-15.984,15.416-26.836c3.231-11.604,3.231-22.74,0-33.397c8.754-11.611,12.847-24.649,12.272-39.115C445.395,268.286,443.971,261.055,441.11,252.677z\"></path><path d=\"M100.5,191.864H18.276c-4.952,0-9.235,1.809-12.851,5.426C1.809,200.905,0,205.188,0,210.137v182.732c0,4.942,1.809,9.227,5.426,12.847c3.619,3.611,7.902,5.421,12.851,5.421H100.5c4.948,0,9.229-1.81,12.847-5.421c3.616-3.62,5.424-7.904,5.424-12.847V210.137c0-4.949-1.809-9.231-5.424-12.847C109.73,193.672,105.449,191.864,100.5,191.864zM67.665,369.308c-3.616,3.521-7.898,5.281-12.847,5.281c-5.14,0-9.471-1.76-12.99-5.281c-3.521-3.521-5.281-7.85-5.281-12.99c0-4.948,1.759-9.232,5.281-12.847c3.52-3.617,7.85-5.428,12.99-5.428c4.949,0,9.231,1.811,12.847,5.428c3.617,3.614,5.426,7.898,5.426,12.847C73.091,361.458,71.286,365.786,67.665,369.308z\"></path></g></g></svg>'\n    };\n});\n\n\n","\ndefine('css!likertScoreInteraction/runtime/css/likertScoreInteraction',[],function(){});\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016-2024 (original work) Open Assessment Technologies SA;\n *\n */\ndefine('likertScoreInteraction/runtime/js/renderer',[\n    'likertScoreInteraction/runtime/js/assets',\n    'css!likertScoreInteraction/runtime/css/likertScoreInteraction'\n], function(assets) {\n    'use strict';\n\n    function renderChoices(id, container, config) {\n        const rootElt = container.querySelector('.likertScoreInteraction');\n        const ul = rootElt && rootElt.querySelector('ul.likert');\n        const disabled = rootElt.classList.contains('tao-qti-creator-context');\n\n        if (!rootElt || !ul) {\n            throw new Error('LikertScoreInteraction: cannot render choices, markup elements not found');\n        }\n\n        if (config.numbers) {\n            rootElt.classList.add('numbers-above');\n        } else {\n            rootElt.classList.remove('numbers-above');\n        }\n\n        //ensure that renderChoices() is idempotent\n        ul.innerHTML = '';\n\n        // add levels\n        const level = parseInt(config.level) || 5;\n        for (let i = 1; i <= level; i++) {\n            const li = document.createElement('li');\n            const input = document.createElement('input');\n            input.setAttribute('type', 'radio');\n            input.setAttribute('name', id);\n            input.setAttribute('value', i);\n            if (disabled) {\n                input.setAttribute('disabled', 'disabled');\n            }\n\n            li.append(input);\n            ul.append(li);\n        }\n    }\n\n    function renderLabels(container, config) {\n        const div = container.querySelector('div.scale');\n        const ul = div && div.querySelector('ul.likert');\n\n        if (!div || !ul) {\n            throw new Error('LikertScoreInteraction: cannot render labels, markup elements not found');\n        }\n\n        // texts\n        let labelMin = div.querySelector('.likert-label-min');\n        if (!labelMin) {\n            labelMin = document.createElement('span');\n            labelMin.classList.add('likert-label', 'likert-label-min');\n            labelMin.innerHTML = config['label-min'];\n        }\n\n        let labelMax = div.querySelector('.likert-label-max');\n        if (!labelMax) {\n            labelMax = document.createElement('span');\n            labelMax.classList.add('likert-label', 'likert-label-max');\n            labelMax.innerHTML = config['label-max'];\n        }\n\n        // icons\n        const parseSvgString = svgString => new DOMParser().parseFromString(svgString, 'image/svg+xml').querySelector('svg');\n        const iconMin = parseSvgString(assets.thumbDown);\n        const iconMax = parseSvgString(assets.thumbUp);\n\n        let newChildren;\n        div.innerHTML = '';\n        if (config.icons) {\n            newChildren = [labelMin, iconMin, ul, iconMax, labelMax];\n        } else {\n            newChildren = [labelMin, ul, labelMax];\n        }\n        for (const child of newChildren) {\n            div.append(child);\n        }\n    }\n\n    return {\n        render(id, container, config) {\n            renderChoices(id, container, config);\n            renderLabels(container, config);\n        },\n        renderChoices,\n        renderLabels\n    };\n});\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017-2024 (original work) Open Assessment Technologies SA;\n *\n */\ndefine('taoQtiItem/portableLib/OAT/util/EventMgr',[],function() {\n    'use strict';\n\n    return function EventMgr() {\n        const events = {};\n\n        this.get = event => {\n            if (event && events[event]) {\n                return [...events[event]];\n            } else {\n                return [];\n            }\n        };\n\n        this.on = (event, callback) => {\n            let name;\n            const tokens = event.split('.');\n            if (tokens[0]) {\n                name = tokens.shift();\n                events[name] = events[name] || [];\n                events[name].push({\n                    ns: tokens,\n                    callback: callback\n                });\n            }\n        };\n\n        this.off = event => {\n            if (event && events[event]) {\n                events[event] = [];\n            }\n        };\n\n        this.trigger = (event, data) => {\n            if (events[event]) {\n                events[event].forEach(e => {\n                    e.callback.apply({\n                        type: event,\n                        ns: []\n                    }, data);\n                });\n            }\n        };\n    };\n});\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017-2024 (original work) Open Assessment Technologies SA;\n *\n */\ndefine('taoQtiItem/portableLib/OAT/util/event',['taoQtiItem/portableLib/OAT/util/EventMgr'], function(EventMgr) {\n    return {\n        addEventMgr: function(instance) {\n            const eventMgr = new EventMgr();\n\n            instance.on = (event, callback) => {\n                eventMgr.on(event, callback);\n            };\n            instance.off = event => {\n                eventMgr.off(event);\n            };\n            instance.trigger = (event, data) => {\n                eventMgr.trigger(event, data);\n            };\n        }\n    };\n});\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017-2024 (original work) Open Assessment Technologies SA;\n *\n */\ndefine('likertScoreInteraction/runtime/js/likertScoreInteraction',[\n    'qtiCustomInteractionContext',\n    'likertScoreInteraction/runtime/js/renderer',\n    'taoQtiItem/portableLib/OAT/util/event'\n], function(qtiCustomInteractionContext, renderer, event){\n    'use strict';\n\n    const _typeIdentifier = 'likertScoreInteraction';\n\n    function likertInteractionFactory() {\n        return {\n\n            /*********************************\n             *\n             * IMS specific PCI API property and methods\n             *\n             *********************************/\n\n            typeIdentifier: _typeIdentifier,\n\n            /*********************************\n             *\n             * TAO and IMS shared PCI API methods\n             *\n             *********************************/\n\n            /**\n             * Get the response in the json format described in\n             * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n             *\n             * @param {Object} interaction\n             * @returns {Object}\n             */\n            getResponse: function() {\n                const checkedInput = this.dom.querySelector('input:checked');\n                const value = (checkedInput && parseInt(checkedInput.value)) || 0;\n\n                return { base: { integer: value } };\n            },\n            /**\n             * Reverse operation performed by render()\n             * After this function is executed, only the inital naked markup remains\n             * Event listeners are removed and the state and the response are reset\n             *\n             * @param {Object} interaction\n             */\n            destroy: function() {\n                this.dom.innerHTML = '';\n            },\n\n\n            /*********************************\n             *\n             * TAO specific PCI API methods\n             *\n             *********************************/\n\n            /**\n             * Get the type identifier of a pci\n              * @returns {string}\n             */\n            getTypeIdentifier: function() {\n                return _typeIdentifier;\n            },\n\n            /**\n             * Render the PCI :\n             * @param {String} id - responseIdentifier\n             * @param {Node} dom - container provided by host\n             * @param {Object} properties (PCI's config.properties)\n             */\n            initialize: function(id, dom, properties) {\n                this.dom = dom;\n                this.properties = properties || {};\n\n                renderer.render(id, this.dom, this.properties);\n            },\n\n            /**\n             * Programmatically set the response following the json schema described in\n             * http://www.imsglobal.org/assessment/pciv1p0cf/imsPCIv1p0cf.html#_Toc353965343\n             *\n             * @param {Object} interaction\n             * @param {Object} response\n             */\n            setResponse: function(response) {\n                const value = response && response.base ? parseInt(response.base.integer) : -1;\n                const input = this.dom.querySelector(`input[value=\"${value}\"]`);\n                if (input) {\n                    input.setAttribute('checked', true);\n                }\n            },\n\n            /**\n             * Remove the current response set in the interaction\n             * The state may not be restored at this point.\n             *\n             * @param {Object} interaction\n             */\n            resetResponse: function() {\n                this.dom.querySelector('input:checked').setAttribute('checked', false);\n            },\n\n            /**\n             * Restore the state of the interaction from the serializedState.\n             *\n             * @param {Object} interaction\n             * @param {Object} serializedState - json format\n             */\n            setSerializedState: function(state) {\n                if(state && state.response) {\n                    this.setResponse(state.response);\n                }\n            },\n\n            /**\n             * Get the current state of the interaction as a string.\n             * It enables saving the state for later usage.\n             *\n             * @param {Object} interaction\n             * @returns {Object} json format\n             */\n            getSerializedState: function() {\n                return { response : this.getResponse() };\n            }\n        }\n    };\n\n    qtiCustomInteractionContext.register({\n        typeIdentifier: _typeIdentifier,\n\n        /**\n         * initialize the PCI object. As this object is cloned for each instance, using \"this\" is safe practice.\n         * @param {DOMElement} dom - the dom element the PCI can use\n         * @param {Object} config - the standard configuration object\n         * @param {Object} [state] - the json serialized state object, returned by previous call to getState()\n         */\n        getInstance(dom, config, state) {\n            const likertInteraction = likertInteractionFactory();\n\n            // create a IMS PCI instance object that will be provided in onready\n            const pciInstance = {\n                getResponse() {\n                    return likertInteraction.getResponse();\n                },\n\n                /**\n                 * Get the current state of the PCI\n                 * @returns {Object}\n                 */\n                getState() {\n                    return likertInteraction.getSerializedState();\n                },\n\n                /**\n                 * Called by delivery engine when PCI is fully completed\n                 */\n                oncompleted() {\n                    likertInteraction.destroy();\n                }\n            };\n\n            // event manager is necessary only for creator part\n            event.addEventMgr(pciInstance);\n\n            const boundTo = config.boundTo;\n            const responseIdentifier = Object.keys(boundTo)[0];\n            let response = boundTo[responseIdentifier];\n\n            // initialize and set previous response/state\n            likertInteraction.initialize(responseIdentifier, dom, config.properties);\n            likertInteraction.setResponse(response);\n            likertInteraction.setSerializedState(state);\n\n            pciInstance.on('configChange', newProperties => {\n                Object.assign(likertInteraction.properties, newProperties);\n                renderer.render(responseIdentifier, dom, likertInteraction.properties);\n            });\n\n            // PCI instance is ready to run\n            config.onready(pciInstance);\n\n            likertInteraction.pciInstance = pciInstance;\n        }\n    });\n});\n\n","\n(function(c){var d=document,a='appendChild',i='styleSheet',s=d.createElement('style');s.type='text/css';d.getElementsByTagName('head')[0][a](s);s[i]?s[i].cssText=c:s[a](d.createTextNode(c));})\n('.likertScoreInteraction {\\n    --likert-choice-gap: 1em;\\n}\\n.likertScoreInteraction .scale {\\n    display: flex;\\n    align-items: center;\\n    margin-top: 1em;\\n}\\n.likertScoreInteraction .scale svg {\\n    margin: 0.5em 0;\\n}\\n.likertScoreInteraction .scale svg:first-of-type {\\n    margin-inline-start: 0.5em;\\n}\\n.likertScoreInteraction .scale svg:last-of-type {\\n    margin-inline-end: 0.5em;\\n}\\n.likertScoreInteraction .scale ul.likert {\\n    display: inline-flex;\\n    flex-wrap: wrap;\\n    align-items: center;\\n    gap: var(--likert-choice-gap);\\n    list-style-type: none;\\n    margin: 0.25em 1em;\\n    padding: 0;\\n}\\n.likertScoreInteraction.numbers-above .scale {\\n    align-items: flex-end;\\n}\\n.likertScoreInteraction .scale ul input {\\n    position: relative;\\n    margin: 0;\\n    padding: 0;\\n    color: inherit;\\n}\\n.likertScoreInteraction.numbers-above .scale ul li {\\n    text-align: center;\\n}\\n.likertScoreInteraction.numbers-above .scale ul li::before {\\n    content: counter(list-item);\\n    display: block;\\n}\\n');\n","define(['likertScoreInteraction/runtime/js/likertScoreInteraction'],function(IMSPCI){return IMSPCI});\n"],"mappings":"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"}